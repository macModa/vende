# Development Dockerfile for Flutter with Firebase support
FROM ubuntu:22.04

# Avoid prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies
RUN apt-get update && \
    apt-get install -y \
    curl \
    git \
    unzip \
    xz-utils \
    zip \
    libglu1-mesa \
    wget \
    openjdk-11-jdk \
    clang \
    cmake \
    ninja-build \
    pkg-config \
    libgtk-3-dev \
    liblzma-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set up environment variables
ENV FLUTTER_VERSION=3.24.5
ENV FLUTTER_HOME="/opt/flutter"
ENV JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
ENV ANDROID_HOME="/opt/android-sdk"
ENV PATH="${PATH}:${FLUTTER_HOME}/bin:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools"

# Install Flutter
RUN git clone -b stable https://github.com/flutter/flutter.git ${FLUTTER_HOME} && \
    cd ${FLUTTER_HOME} && \
    git config --global --add safe.directory ${FLUTTER_HOME} && \
    flutter config --enable-web && \
    flutter config --enable-linux-desktop && \
    flutter precache

# Install Android SDK (for mobile development)
RUN mkdir -p ${ANDROID_HOME} && \
    cd ${ANDROID_HOME} && \
    wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip && \
    unzip commandlinetools-linux-9477386_latest.zip && \
    rm commandlinetools-linux-9477386_latest.zip && \
    mv cmdline-tools tools && \
    mkdir -p cmdline-tools/latest && \
    mv tools/* cmdline-tools/latest/ && \
    rmdir tools

# Accept licenses and install Android SDK components
RUN yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses && \
    ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"

# Install Chrome for web development
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
    echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/google-chrome.list && \
    apt-get update && \
    apt-get install -y google-chrome-stable && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set up working directory
WORKDIR /app

# Copy pubspec files first for better Docker layer caching
COPY pubspec.yaml pubspec.lock ./

# Get Flutter dependencies
RUN flutter pub get

# Copy the rest of the application
COPY . .

# Generate code
RUN flutter pub run build_runner build --delete-conflicting-outputs

# Expose ports for development servers
EXPOSE 3000 8080 5000 9100

# Create a script for development
RUN echo '#!/bin/bash\n\
echo "=== Flutter Development Container ==="\n\
echo "Available commands:"\n\
echo "  flutter run --web-port=3000 --web-hostname=0.0.0.0 (for web)"\n\
echo "  flutter build web (build for web)"\n\
echo "  flutter pub get (get dependencies)"\n\
echo "  flutter pub run build_runner build (regenerate code)"\n\
echo "  flutter doctor (check setup)"\n\
echo "  flutter analyze (analyze code)"\n\
echo "  flutter test (run tests)"\n\
echo ""\n\
echo "Web app will be available at http://localhost:3000"\n\
echo "DevTools available at http://localhost:9100"\n\
echo ""\n\
exec "$@"' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["flutter", "run", "--web-port=3000", "--web-hostname=0.0.0.0", "--web-renderer=html"]
